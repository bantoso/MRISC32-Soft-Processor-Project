$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
  $var wire 32 # A [31:0] $end
  $var wire 32 $ B [31:0] $end
  $var wire 2 % pack_mode [1:0] $end
  $var wire 32 & result [31:0] $end
 $upscope $end
 $scope module adder32 $end
  $var wire 32 ' A [31:0] $end
  $var wire 32 ( B [31:0] $end
  $var wire 2 ) pack_mode [1:0] $end
  $var wire 32 * result [31:0] $end
  $var wire 32 + word_sum [31:0] $end
  $var wire 16 , half_sum_lo [15:0] $end
  $var wire 16 - half_sum_hi [15:0] $end
  $var wire 8 . byte_sum0 [7:0] $end
  $var wire 8 / byte_sum1 [7:0] $end
  $var wire 8 0 byte_sum2 [7:0] $end
  $var wire 8 1 byte_sum3 [7:0] $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b0000000000000000 ,
b0000000000000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
#1
